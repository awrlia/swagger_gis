openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Jelaskan disini apa saja yang perlu dijelaskan
    termasuk informasi yang diperlukan untuk dinilai
    term of service isi dari link repo dari swagger ini
  termsOfService:
    email: 
  license:
    name: Peda Package
    url: https://pkg.go.dev/github.com/Indoculturafinders/BackendBaru
  version: 1.0.3
externalDocs:
  description: Repo GCF
  url: 
servers:
  - url: https://asia-southeast2-project3-403605.cloudfunctions.net
  - name: Login
    description: Mendapatkan token menggunakan akun user yang telah dibuat
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://petapedia.github.io/gcf/post/ #yang ini blom diganti ====================================================================
  - name: Geojson
    description: Mengambil Geojson
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://petapedia.github.io/gcf/post/ #yang ini blom diganti ====================================================================
paths:
  /CreateUser:
    post:
      tags:
        - Registrasi
      summary: Registrasi User
      description: Membuat akun user dengan password terenkripsi
      operationId: MembuatUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /GCFPostHandler:
    post:
      tags:
        - Login
      summary: Mendapatkan token untuk login
      description: Masukkan username dan password yang telah didaftarkan
      operationId: MembuatTokenUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameNPassword'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameNPassword'
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    Geojson:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    User:
      type: object
      properties:
        username:
          type: string
          example: aulia
        password:
          type: string
          example: aulia
        role:
          type: string
          example: user
    UsernameNPassword:
      type: object
      properties:
        username:
          type: string
          example: aulia
        password:
          type: string
          example: aulia
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
